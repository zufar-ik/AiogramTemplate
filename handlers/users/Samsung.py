from aiogram import types
from aiogram.dispatcher import FSMContext

from keyboards.default.buttons import menuAll, tel
from keyboards.default.galaxy import galaxymod, galaxyModelS, galaxyModelZ, galaxyModelA, galaxyModelN
from loader import dp
from states.state import Phone
from states.state import Samsung


@dp.message_handler(text="Samsung", state=Phone.category)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–µ–π–∫—É —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ Samsung", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.subcategory)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=tel)
    await Phone.category.set()


@dp.message_handler(text="Galaxy S", state=Samsung.subcategory)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–µ–π–∫—É —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ S", reply_markup=galaxyModelS)
    await Samsung.productS.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥", state=Samsung.productS)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="Galaxy Z", state=Samsung.subcategory)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–µ–π–∫—É —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ Z", reply_markup=galaxyModelZ)
    await Samsung.productZ.set()


@dp.message_handler(text="Galaxy Z Fold", state=Samsung.productZ)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ Z Fold")
    await Samsung.subproductZ.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.subproductZ)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="Galaxy Z Flip", state=Samsung.productZ)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ Z Flip")
    await Samsung.subproductZ.set()


@dp.message_handler(text="Galaxy A", state=Samsung.subcategory)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–µ–π–∫—É —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ A", reply_markup=galaxyModelA)
    await Samsung.productA.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.productA)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="Galaxy A01-A09", state=Samsung.productA)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ A01-A09")
    await Samsung.subproductA.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.subproductA)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.productA.set()


@dp.message_handler(text="Galaxy Note", state=Samsung.subcategory)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏–Ω–µ–π–∫—É —Å–º–∞—Ä—Ç—Ñ–æ–Ω–æ–≤ Note", reply_markup=galaxyModelN)
    await Samsung.productN.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.productN)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="Galaxy Note 10/Lite/+", state=Samsung.productN)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ Note 10")
    await Samsung.subproductN.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.subproductN)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.productN.set()


@dp.message_handler(text="Galaxy S10/Lite/e/+", state=Samsung.productS)
async def key(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å–µ—Ä–∏—é —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞ S10")
    await Samsung.subproductS.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Samsung.subproductS)
async def key(message: types.Message):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=galaxymod)
    await Samsung.subcategory.set()


@dp.message_handler(text="–ù–∞–∑–∞–¥üîô", state=Phone.category)
async def back1(message: types.Message, state: FSMContext):
    await message.answer("–í—ã –Ω–∞–∂–∞–ª–∏ –Ω–∞–∑–∞–¥", reply_markup=menuAll)
    await state.finish()


# @dp.message_handler(text=modelListGalaxy, state=Samsung.subproductS)
# async def model_answer(message: types.Message):
#     for i in modelListGalaxy:
#         if message.text == i:
#             n = modelListGalaxy.index(i)
#             n += 1
#             answer_sheet = (sheets_4[f"B{n}:AV{n}"])
#             for photo, date, size, weight, frame, color, battery, price, tech, touch, colour, sized, square, hw, sc, \
#                 sr, PPI, sp, other, camback, backab, backf, backrec, frontcam, frontab, frontf, frontrec, OS, chip, \
#                 cpu, gpu, sdcard, RAM, Antutu9, Antutu8, Geek5s, Geek5m, sim, net, speed, gprs, edge, wifi, gps, nfc, \
#                 usb, bluet in answer_sheet:
#                 await message.answer_photo(photo=photo.value)
#                 await message.answer(f'<b>‚Ä¢–û–±—â–∏–µ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</b>‚Ä¢\n\n'
#                                      f'‚Ä¢–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {date.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä—ã (–íx–®x–ì): {size.value}\n'
#                                      f'‚Ä¢–í–µ—Å: {weight.value}\n'
#                                      f'‚Ä¢–ö–æ—Ä–ø—É—Å: {frame.value}\n'
#                                      f'‚Ä¢–¶–≤–µ—Ç–∞: {color.value}\n'
#                                      f'‚Ä¢–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä: {battery.value}\n'
#                                      f'‚Ä¢–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {price.value}\n'
#                                      f'\n\n<b>‚Ä¢–î–∏—Å–ø–ª–µ–π‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {tech.value}\n'
#                                      f'‚Ä¢–°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω: {touch.value}\n'
#                                      f'‚Ä¢–ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞: {colour.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä(–î–∏–∞–≥–æ–Ω–∞–ª—å): {sized.value}\n'
#                                      f'‚Ä¢–ü–ª–æ—â–∞–¥—å —ç–∫—Ä–∞–Ω–∞: {square.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (–≤—ã—Å–æ—Ç–∞:—à–∏—Ä–∏–Ω–∞): {hw.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (—ç–∫—Ä–∞–Ω:–∫–æ—Ä–ø—É—Å): {sc.value}\n'
#                                      f'‚Ä¢–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {sr.value}\n'
#                                      f'‚Ä¢–¢–æ—á–µ–∫ –Ω–∞ –¥—é–π–º : {PPI.value}\n'
#                                      f'‚Ä¢–ó–∞—â–∏—Ç–∞ —ç–∫—Ä–∞–Ω–∞: {sp.value}\n'
#                                      f'‚Ä¢–î—Ä—É–≥–æ–µ: {other.value}\n'
#                                      f'\n\n<b>‚Ä¢–ö–∞–º–µ—Ä—ã –∏ –≤–∏–¥–µ–æ‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–ö–∞–º–µ—Ä–∞ –∑–∞–¥–Ω–µ–≥–æ, –æ—Å–Ω–æ–≤–Ω–∞—è: {camback.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–º–µ—Ä—ã: \n{backab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {backf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {backrec.value}\n'
#                                      f'‚Ä¢–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞, —Å–µ–ª—Ñ–∏: {frontcam.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {frontab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {frontf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {frontrec.value}\n'
#                                      f'\n\n<b>‚Ä¢–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (OS): {OS.value}\n'
#                                      f'‚Ä¢–ß–∏–ø—Å–µ—Ç: {chip.value}\n'
#                                      f'‚Ä¢–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU): {cpu.value}\n'
#                                      f'‚Ä¢–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (GPU): {gpu.value}\n'
#                                      f'‚Ä¢–í–Ω–µ—à–Ω—è—è –∫–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏: {sdcard.value}\n'
#                                      f'‚Ä¢–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å: {RAM.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 9: {Antutu9.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 8: {Antutu8.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Single Core: {Geek5s.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Multi-Core: {Geek5m.value}\n'
#                                      f'\n\n<b>‚Ä¢–°–µ—Ç–∏‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–°–ª–æ—Ç—ã: {sim.value}\n'
#                                      f'‚Ä¢–°–µ—Ç—å: {net.value}\n'
#                                      f'‚Ä¢–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: {speed.value}\n'
#                                      f'‚Ä¢GPRS: {gprs.value}\n'
#                                      f'‚Ä¢Edge: {edge.value}\n'
#                                      f'‚Ä¢Wi-Fi: {wifi.value}\n'
#                                      f'‚Ä¢GPS: {gps.value}\n'
#                                      f'‚Ä¢NFC: {nfc.value}\n'
#                                      f'‚Ä¢USB: {usb.value}\n'
#                                      f'‚Ä¢Bluetooth: {bluet.value}\n')
#                 await Samsung.subproductS.set()

#
# @dp.message_handler(text=modelListGalaxy, state=Samsung.subproductZ)
# async def model_answer(message: types.Message):
#     for i in modelListGalaxy:
#         if message.text == i:
#             n = modelListGalaxy.index(i)
#             n += 1
#             answer_sheet = (sheets_4[f"B{n}:AV{n}"])
#             for photo, date, size, weight, frame, color, battery, price, tech, touch, colour, sized, square, hw, sc, \
#                 sr, PPI, sp, other, camback, backab, backf, backrec, frontcam, frontab, frontf, frontrec, OS, chip, \
#                 cpu, gpu, sdcard, RAM, Antutu9, Antutu8, Geek5s, Geek5m, sim, net, speed, gprs, edge, wifi, gps, nfc, \
#                 usb, bluet in answer_sheet:
#                 await message.answer_photo(photo=photo.value)
#                 await message.answer(f'<b>‚Ä¢–û–±—â–∏–µ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</b>‚Ä¢\n\n'
#                                      f'‚Ä¢–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {date.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä—ã (–íx–®x–ì): {size.value}\n'
#                                      f'‚Ä¢–í–µ—Å: {weight.value}\n'
#                                      f'‚Ä¢–ö–æ—Ä–ø—É—Å: {frame.value}\n'
#                                      f'‚Ä¢–¶–≤–µ—Ç–∞: {color.value}\n'
#                                      f'‚Ä¢–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä: {battery.value}\n'
#                                      f'‚Ä¢–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {price.value}\n'
#                                      f'\n\n<b>‚Ä¢–î–∏—Å–ø–ª–µ–π‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {tech.value}\n'
#                                      f'‚Ä¢–°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω: {touch.value}\n'
#                                      f'‚Ä¢–ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞: {colour.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä(–î–∏–∞–≥–æ–Ω–∞–ª—å): {sized.value}\n'
#                                      f'‚Ä¢–ü–ª–æ—â–∞–¥—å —ç–∫—Ä–∞–Ω–∞: {square.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (–≤—ã—Å–æ—Ç–∞:—à–∏—Ä–∏–Ω–∞): {hw.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (—ç–∫—Ä–∞–Ω:–∫–æ—Ä–ø—É—Å): {sc.value}\n'
#                                      f'‚Ä¢–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {sr.value}\n'
#                                      f'‚Ä¢–¢–æ—á–µ–∫ –Ω–∞ –¥—é–π–º : {PPI.value}\n'
#                                      f'‚Ä¢–ó–∞—â–∏—Ç–∞ —ç–∫—Ä–∞–Ω–∞: {sp.value}\n'
#                                      f'‚Ä¢–î—Ä—É–≥–æ–µ: {other.value}\n'
#                                      f'\n\n<b>‚Ä¢–ö–∞–º–µ—Ä—ã –∏ –≤–∏–¥–µ–æ‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–ö–∞–º–µ—Ä–∞ –∑–∞–¥–Ω–µ–≥–æ, –æ—Å–Ω–æ–≤–Ω–∞—è: {camback.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–º–µ—Ä—ã: \n{backab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {backf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {backrec.value}\n'
#                                      f'‚Ä¢–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞, —Å–µ–ª—Ñ–∏: {frontcam.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {frontab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {frontf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {frontrec.value}\n'
#                                      f'\n\n<b>‚Ä¢–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (OS): {OS.value}\n'
#                                      f'‚Ä¢–ß–∏–ø—Å–µ—Ç: {chip.value}\n'
#                                      f'‚Ä¢–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU): {cpu.value}\n'
#                                      f'‚Ä¢–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (GPU): {gpu.value}\n'
#                                      f'‚Ä¢–í–Ω–µ—à–Ω—è—è –∫–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏: {sdcard.value}\n'
#                                      f'‚Ä¢–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å: {RAM.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 9: {Antutu9.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 8: {Antutu8.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Single Core: {Geek5s.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Multi-Core: {Geek5m.value}\n'
#                                      f'\n\n<b>‚Ä¢–°–µ—Ç–∏‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–°–ª–æ—Ç—ã: {sim.value}\n'
#                                      f'‚Ä¢–°–µ—Ç—å: {net.value}\n'
#                                      f'‚Ä¢–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: {speed.value}\n'
#                                      f'‚Ä¢GPRS: {gprs.value}\n'
#                                      f'‚Ä¢Edge: {edge.value}\n'
#                                      f'‚Ä¢Wi-Fi: {wifi.value}\n'
#                                      f'‚Ä¢GPS: {gps.value}\n'
#                                      f'‚Ä¢NFC: {nfc.value}\n'
#                                      f'‚Ä¢USB: {usb.value}\n'
#                                      f'‚Ä¢Bluetooth: {bluet.value}\n')
#                 await Samsung.subproductZ.set()
#
#
# @dp.message_handler(text=modelListGalaxy, state=Samsung.subproductA)
# async def model_answer(message: types.Message):
#     for i in modelListGalaxy:
#         if message.text == i:
#             n = modelListGalaxy.index(i)
#             n += 1
#             answer_sheet = (sheets_4[f"B{n}:AV{n}"])
#             for photo, date, size, weight, frame, color, battery, price, tech, touch, colour, sized, square, hw, sc, \
#                 sr, PPI, sp, other, camback, backab, backf, backrec, frontcam, frontab, frontf, frontrec, OS, chip, \
#                 cpu, gpu, sdcard, RAM, Antutu9, Antutu8, Geek5s, Geek5m, sim, net, speed, gprs, edge, wifi, gps, nfc, \
#                 usb, bluet in answer_sheet:
#                 await message.answer_photo(photo=photo.value)
#                 await message.answer(f'<b>‚Ä¢–û–±—â–∏–µ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</b>‚Ä¢\n\n'
#                                      f'‚Ä¢–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {date.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä—ã (–íx–®x–ì): {size.value}\n'
#                                      f'‚Ä¢–í–µ—Å: {weight.value}\n'
#                                      f'‚Ä¢–ö–æ—Ä–ø—É—Å: {frame.value}\n'
#                                      f'‚Ä¢–¶–≤–µ—Ç–∞: {color.value}\n'
#                                      f'‚Ä¢–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä: {battery.value}\n'
#                                      f'‚Ä¢–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {price.value}\n'
#                                      f'\n\n<b>‚Ä¢–î–∏—Å–ø–ª–µ–π‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {tech.value}\n'
#                                      f'‚Ä¢–°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω: {touch.value}\n'
#                                      f'‚Ä¢–ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞: {colour.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä(–î–∏–∞–≥–æ–Ω–∞–ª—å): {sized.value}\n'
#                                      f'‚Ä¢–ü–ª–æ—â–∞–¥—å —ç–∫—Ä–∞–Ω–∞: {square.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (–≤—ã—Å–æ—Ç–∞:—à–∏—Ä–∏–Ω–∞): {hw.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (—ç–∫—Ä–∞–Ω:–∫–æ—Ä–ø—É—Å): {sc.value}\n'
#                                      f'‚Ä¢–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {sr.value}\n'
#                                      f'‚Ä¢–¢–æ—á–µ–∫ –Ω–∞ –¥—é–π–º : {PPI.value}\n'
#                                      f'‚Ä¢–ó–∞—â–∏—Ç–∞ —ç–∫—Ä–∞–Ω–∞: {sp.value}\n'
#                                      f'‚Ä¢–î—Ä—É–≥–æ–µ: {other.value}\n'
#                                      f'\n\n<b>‚Ä¢–ö–∞–º–µ—Ä—ã –∏ –≤–∏–¥–µ–æ‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–ö–∞–º–µ—Ä–∞ –∑–∞–¥–Ω–µ–≥–æ, –æ—Å–Ω–æ–≤–Ω–∞—è: {camback.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–º–µ—Ä—ã: \n{backab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {backf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {backrec.value}\n'
#                                      f'‚Ä¢–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞, —Å–µ–ª—Ñ–∏: {frontcam.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {frontab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {frontf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {frontrec.value}\n'
#                                      f'\n\n<b>‚Ä¢–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (OS): {OS.value}\n'
#                                      f'‚Ä¢–ß–∏–ø—Å–µ—Ç: {chip.value}\n'
#                                      f'‚Ä¢–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU): {cpu.value}\n'
#                                      f'‚Ä¢–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (GPU): {gpu.value}\n'
#                                      f'‚Ä¢–í–Ω–µ—à–Ω—è—è –∫–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏: {sdcard.value}\n'
#                                      f'‚Ä¢–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å: {RAM.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 9: {Antutu9.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 8: {Antutu8.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Single Core: {Geek5s.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Multi-Core: {Geek5m.value}\n'
#                                      f'\n\n<b>‚Ä¢–°–µ—Ç–∏‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–°–ª–æ—Ç—ã: {sim.value}\n'
#                                      f'‚Ä¢–°–µ—Ç—å: {net.value}\n'
#                                      f'‚Ä¢–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: {speed.value}\n'
#                                      f'‚Ä¢GPRS: {gprs.value}\n'
#                                      f'‚Ä¢Edge: {edge.value}\n'
#                                      f'‚Ä¢Wi-Fi: {wifi.value}\n'
#                                      f'‚Ä¢GPS: {gps.value}\n'
#                                      f'‚Ä¢NFC: {nfc.value}\n'
#                                      f'‚Ä¢USB: {usb.value}\n'
#                                      f'‚Ä¢Bluetooth: {bluet.value}\n')
#                 await Samsung.subproductA.set()
#
#
# @dp.message_handler(text=modelListGalaxy, state=Samsung.subproductN)
# async def model_answer(message: types.Message):
#     for i in modelListGalaxy:
#         if message.text == i:
#             n = modelListGalaxy.index(i)
#             n += 1
#             answer_sheet = (sheets_4[f"B{n}:AV{n}"])
#             for photo, date, size, weight, frame, color, battery, price, tech, touch, colour, sized, square, hw, sc, \
#                 sr, PPI, sp, other, camback, backab, backf, backrec, frontcam, frontab, frontf, frontrec, OS, chip, \
#                 cpu, gpu, sdcard, RAM, Antutu9, Antutu8, Geek5s, Geek5m, sim, net, speed, gprs, edge, wifi, gps, nfc, \
#                 usb, bluet in answer_sheet:
#                 await message.answer_photo(photo=photo.value)
#                 await message.answer(f'<b>‚Ä¢–û–±—â–∏–µ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</b>‚Ä¢\n\n'
#                                      f'‚Ä¢–î–∞—Ç–∞ –≤—ã—Ö–æ–¥–∞: {date.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä—ã (–íx–®x–ì): {size.value}\n'
#                                      f'‚Ä¢–í–µ—Å: {weight.value}\n'
#                                      f'‚Ä¢–ö–æ—Ä–ø—É—Å: {frame.value}\n'
#                                      f'‚Ä¢–¶–≤–µ—Ç–∞: {color.value}\n'
#                                      f'‚Ä¢–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä: {battery.value}\n'
#                                      f'‚Ä¢–û—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–æ—á–Ω–∞—è —Ü–µ–Ω–∞: {price.value}\n'
#                                      f'\n\n<b>‚Ä¢–î–∏—Å–ø–ª–µ–π‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏: {tech.value}\n'
#                                      f'‚Ä¢–°–µ–Ω—Å–æ—Ä–Ω—ã–π —ç–∫—Ä–∞–Ω: {touch.value}\n'
#                                      f'‚Ä¢–ì–ª—É–±–∏–Ω–∞ —Ü–≤–µ—Ç–∞: {colour.value}\n'
#                                      f'‚Ä¢–†–∞–∑–º–µ—Ä(–î–∏–∞–≥–æ–Ω–∞–ª—å): {sized.value}\n'
#                                      f'‚Ä¢–ü–ª–æ—â–∞–¥—å —ç–∫—Ä–∞–Ω–∞: {square.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (–≤—ã—Å–æ—Ç–∞:—à–∏—Ä–∏–Ω–∞): {hw.value}\n'
#                                      f'‚Ä¢–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ (—ç–∫—Ä–∞–Ω:–∫–æ—Ä–ø—É—Å): {sc.value}\n'
#                                      f'‚Ä¢–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: {sr.value}\n'
#                                      f'‚Ä¢–¢–æ—á–µ–∫ –Ω–∞ –¥—é–π–º : {PPI.value}\n'
#                                      f'‚Ä¢–ó–∞—â–∏—Ç–∞ —ç–∫—Ä–∞–Ω–∞: {sp.value}\n'
#                                      f'‚Ä¢–î—Ä—É–≥–æ–µ: {other.value}\n'
#                                      f'\n\n<b>‚Ä¢–ö–∞–º–µ—Ä—ã –∏ –≤–∏–¥–µ–æ‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–ö–∞–º–µ—Ä–∞ –∑–∞–¥–Ω–µ–≥–æ, –æ—Å–Ω–æ–≤–Ω–∞—è: {camback.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–∞–º–µ—Ä—ã: \n{backab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {backf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {backrec.value}\n'
#                                      f'‚Ä¢–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞, —Å–µ–ª—Ñ–∏: {frontcam.value}\n'
#                                      f'‚Ä¢–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞: {frontab.value}\n'
#                                      f'‚Ä¢–§—É–Ω–∫—Ü–∏–∏: {frontf.value}\n'
#                                      f'‚Ä¢–ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ: {frontrec.value}\n'
#                                      f'\n\n<b>‚Ä¢–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ (OS): {OS.value}\n'
#                                      f'‚Ä¢–ß–∏–ø—Å–µ—Ç: {chip.value}\n'
#                                      f'‚Ä¢–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (CPU): {cpu.value}\n'
#                                      f'‚Ä¢–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–π –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä (GPU): {gpu.value}\n'
#                                      f'‚Ä¢–í–Ω–µ—à–Ω—è—è –∫–∞—Ä—Ç–∞ –ø–∞–º—è—Ç–∏: {sdcard.value}\n'
#                                      f'‚Ä¢–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å: {RAM.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 9: {Antutu9.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç Antutu 8: {Antutu8.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Single Core: {Geek5s.value}\n'
#                                      f'‚Ä¢–†–µ–∑—É–ª—å—Ç–∞—Ç GeekBench 5 Multi-Core: {Geek5m.value}\n'
#                                      f'\n\n<b>‚Ä¢–°–µ—Ç–∏‚Ä¢</b>\n\n'
#                                      f'‚Ä¢–°–ª–æ—Ç—ã: {sim.value}\n'
#                                      f'‚Ä¢–°–µ—Ç—å: {net.value}\n'
#                                      f'‚Ä¢–°–∫–æ—Ä–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞: {speed.value}\n'
#                                      f'‚Ä¢GPRS: {gprs.value}\n'
#                                      f'‚Ä¢Edge: {edge.value}\n'
#                                      f'‚Ä¢Wi-Fi: {wifi.value}\n'
#                                      f'‚Ä¢GPS: {gps.value}\n'
#                                      f'‚Ä¢NFC: {nfc.value}\n'
#                                      f'‚Ä¢USB: {usb.value}\n'
#                                      f'‚Ä¢Bluetooth: {bluet.value}\n')
#                 await Samsung.subproductN.set()
